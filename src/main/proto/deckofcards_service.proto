syntax = "proto3";

option java_multiple_files = true;
option java_package = "tw.com.tymgateway.grpc.deckofcards";
option java_outer_classname = "DeckofcardsServiceProto";

package tymbackend.deckofcards;

// Deckofcards Service - 撲克牌遊戲服務
service DeckofcardsService {
  // 開始新遊戲
  rpc StartGame(StartGameRequest) returns (GameResponse);

  // 玩家要牌
  rpc PlayerHit(PlayerHitRequest) returns (GameResponse);

  // 玩家停牌
  rpc PlayerStand(PlayerStandRequest) returns (GameResponse);

  // 獲取遊戲狀態
  rpc GetGameStatus(GetGameStatusRequest) returns (GameResponse);

  // 玩家加倍
  rpc PlayerDouble(PlayerDoubleRequest) returns (GameResponse);

  // 玩家分牌
  rpc PlayerSplit(PlayerSplitRequest) returns (GameResponse);
}

// 遊戲狀態數據模型
message GameState {
  string gameId = 1;
  repeated Card playerCards = 2;
  repeated Card dealerCards = 3;
  int32 playerScore = 4;
  int32 dealerScore = 5;
  string gameStatus = 6;  // "playing", "player_win", "dealer_win", "tie", "bust"
  bool canHit = 7;
  bool canStand = 8;
  bool canDouble = 9;
  bool canSplit = 10;
  string message = 11;
}

// 撲克牌數據模型
message Card {
  string suit = 1;  // "hearts", "diamonds", "clubs", "spades"
  string rank = 2;  // "A", "2", "3", ..., "10", "J", "Q", "K"
  int32 value = 3;  // 1-11 (Ace can be 1 or 11)
}

// 請求和響應消息
message StartGameRequest {}

message PlayerHitRequest {}

message PlayerStandRequest {}

message GetGameStatusRequest {}

message PlayerDoubleRequest {}

message PlayerSplitRequest {}

message GameResponse {
  bool success = 1;
  string message = 2;
  GameState gameState = 3;
}
